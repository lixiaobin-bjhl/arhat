<style lang="sass">
    @import '../scss/color';
    @import '../scss/mixin';
    
    .commodity-screen {
        width: 100%;
        height: 100%;
        position: fixed;
        top: 0;
        left: 0;
        background: #000;
        opacity: 0.2;
        overflow: hidden;
        z-index: 1000;
        color: #fff;
    }

    .commodity-attr-box {
        width: 100%;
        min-height: 150px;
        position: fixed;
        bottom: 0;
        left: 0;
        z-index: 2000;
        background: #fff;
        font-size: 14px;
    }

    .content {
        position: relative;
        top: -30px;
        padding-left: 10px;
        padding-bottom: 25px;
    }

    .add-to-card {
        .c {
            padding: 5px 0;
            border-bottom: 1px solid map-get($borders, shallow);
            &:last-of-type {
                border-bottom: 0;
            }
        }
        .specifications {
            
        }
        .info {
            @include clearfix;
            position: relative;
            .title {
                @include text-overflow;
            }
            .close {
                position: absolute;
                right: 10px;
                top: 35px;
            }
            .price {
                color: #ff3333;
            }
            .image {
                width: 64px;
                height: 64px;
                float: left;
                image {
                    border-radius: 3px;
                    width: 60px;
                    height: 60px;
                    border: 1px solid map-get($borders, shallow);
                    padding: 1px;
                    background: #f2f2f2;
                }
            }
            .desc {
                margin: 38px 30px 0 70px;
                overflow: hidden;
            }
            .value {
                 border: 1px solid map-get($borders, shallow);
                 padding: 6px 9px;
            }
        }
        .submit {
            width: 100%;
            border-radius: 0;
            background: #ff3333;
            position: absolute;
            bottom: 0;
            color: #FFF;
        }
    }

</style>


<template>
    <view class="add-to-card">
        <view class="commodity-screen" bindtap="hide" wx:if="{{showModalStatus}}"></view>
        <view animation="{{animationData}}" class="commodity-attr-box" wx:if="{{showModalStatus}}">
            <view class="content">
                <view class="info c">
                    <view class="image">
                        <image mode="aspectFill" src="{{product.imageUrl}}"></image>
                    </view>
                    <view class="desc">
                        <icon type="cancel" @tap="hide" class="close" color="#ff3333" size="23"/>
                        <view class="title">{{product.title}}</view> 
                        <view class="price">{{product.priceStr}}</view>
                    </view>
                </view>
                <view wx:for="{{product.specifications}}" class="specifications c" wx:for-item="specification" wx:for-index="index" wx:key="index">
                    <view>{{specification.name}}：</view>
                    <view class="value">{{specification.value}}</view>
                </view>
                <view class="c">
                    <view>购买数量：</view> 
                    <numberInput :num.sync="product.count"></numberInput>
                </view>
            </view>
            <button class="submit" @tap="submit" disabled="{{submitting}}">确定</button> 
        </view>
    </view>
</template>

<script>
    import numberInput from './numberInput'
    import wepy from 'wepy'
    import * as cardRequest from '../service/card'

    export default class AddToCard extends wepy.component {

        data = {
            showModalStatus: false,
            animationData:  {},
            submitting: false
        }

        components = {
            numberInput
        }

        props = {
           product: {
               type: Object,
               twoWay: true,
               default () {
                   return {
                       count: 5
                   };
               }
           } 
        }

        methods = {
            /**
             * 显示添加购物车对话框
             */
            show: function () {
                var animation = wx.createAnimation({
                    duration: 200,
                    timingFunction: "linear",
                    delay: 0
                });
                this.animation = animation
                animation.translateY(200).step()
                this.animationData = animation.export()
                this.showModalStatus = true;
                setTimeout(()=> {
                    animation.translateY(0).step()
                    this.animationData = animation.export()
                    this.$apply();
                }, 200)
            },

            /**
             * 隐藏添加购物车对话框
             */
            hide:  ()=> {
                // 隐藏遮罩层
                var animation = wx.createAnimation({
                    duration: 200,
                    timingFunction: "linear",
                    delay: 0
                });
                this.animation = animation
                animation.translateY(300).step()
                this.animationData = animation.export()
                setTimeout(()=> {
                    animation.translateY(0).step()
                    this.animationData = animation.export()
                    this.showModalStatus = false;
                    this.$apply();
                }, 200);
            },

            /**
             * 提交 
             */
            submit: ()=> {
                this.submitting = true;
                var count = this.$invoke('numberInput', 'getNum');
                var product = this.product;
                this.product.count = count;

                wx.showLoading();
                cardRequest.addToCard({
                    product: product._id,
                    count: product.count
                })
                .then(()=> {
                    wx.hideLoading();
                    this.$emit('addtocardsuccess', product); 
                    this.methods.hide();
                    this.submitting = false;
                    this.$apply();
                    this.$parent.$invoke('footer', 'getCountByOpendId');
                    wx.showToast({
                        title: '已成功加到购物车'
                    });
                });
            }
        }
    }
</script>