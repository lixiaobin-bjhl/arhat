<style lang="scss">
    @import '../scss/color';
    @import '../scss/mixin';
    @import '../scss/components/footer';

    .order {
        .order-item {
            background: #FFF;
            border-bottom: 1rpx solid map-get($borders, shallow);
            &:first-of-type {
                border-top: 1rpx solid map-get($borders, shallow);
            }
        }
        .total-info {
            @include clearfix;
            padding: 10px;
        }
        .pull-left {
            view {
                @extend .middle;
                margin-right: 3px;
            }
        }
        .order-number {
            color: #999;
            padding: 0 10px;
        }
        .btn-pay {
            @extend .plain-btn;
            padding: 1px 2px;
            background: transparent;
            border: 1px solid #FF3333;
            border-radius: 3px;
            color: #FF3333;
        }
    }

</style>

<template>
    <view class="order">
        <view wx:if="{{list && list.length}}">
            <view class="order-item" wx:for="{{list}}" wx:for-item="item" wx:for-index="index" wx:key="item._id">
                <view class="order-number">订单编号：{{item._id}}</view>
                <view class="product-item" wx:for="{{item.products}}" wx:for-item="n" wx:for-index="i" wx:key="product._id">
                    <view class="product-image weui-media-box__hd weui-media-box__hd_in-appmsg">
                        <image class="weui-media-box__thumb" @tap.stop="redirectProductDetail({{n}})" style="background-color: #eee;" mode="aspectFill" src="{{n.imageUrl}}"></image>
                    </view>  
                    <view class="title">{{n.product.title}}</view>
                    <view wx:for="{{n.product.specifications}}" class="specifications" wx:for-item="specification" wx:for-index="index" wx:key="index">
                        <view>{{specification.name}}：</view>
                        <view>{{specification.value}}</view>
                    </view> 
                    <view class="info">
                        <view class="price">{{n.product.priceStr}}</view>
                        <view class="count">×{{n.count}}</view>
                    </view>
                </view>
                <view class="total-info">
                    <view class="pull-left">
                        <view>合计：<view class="money">{{item.payStr}}</view></view>
                        <view>支付状态：{{item.statusStr}}</view>
                    </view>
                    
                    <view class="pull-right">
                        <view class="btn-pay" @tap="pay({{item}})" wx:if="{{item.status === 0}}">去支付</view>
                    </view>
                </view>
            </view>
        </view>
        <view wx:else>
            <view wx:if="{{list && !list.length}}" class="empty-notice">
                <view class="empty"></view>
                <view class="base">还没有订单哦~</view>
                <view>快去挑点宝贝</view>
                <button @tap="redirect('index')" class="surfing">去逛逛</button>
            </view>
            
        </view>
    </view>
</template>

<script>

    import wepy from 'wepy'
    import { list } from '../service/order'
    import pageConfig  from './config'
    import multiply from '../function/multiply'
    import divide from '../function/divide'
    import currency from '../function/currency'
    import config from '../config';
    import indexBy from '../function/indexBy'
    import createOrderNumber from '../function/createOrderNumber'
    import adaptProductList from '../function/adaptProductList'
    import purchase from '../function/purchase'

    export default class Order extends wepy.page {
        
        config = {
            navigationBarTitleText: '我的订单'
        }

        onShow () {
            this.getOrderList();
        }

        data = {
            list: null 
        }

        methods = {
            /**
             * 跳转到产品详情 
             */
            redirectProductDetail (item) {
                this.methods.redirect('productDetail?pid=' + item.product._id);
            },

            /**
             * 跳转地址 
             */
            redirect (url) {
                wx.redirectTo({
                    url: url
                });
            },

            /**
             * 付款 
             */
            pay (item) {
                var params = {
                    products: item.products.map((item)=> {
                        return {
                            product: item._id,
                            count: item.count
                        }
                    }),
                    id: item._id,
                    shippingAddress: item.shippingAddress && item.shippingAddress._id,
                    discountMoney: 0,
                    title: item.products.map((item)=> {
                        return item.product.title
                    }).join(',').slice(0, 50),
                    status: 0,
                    mobile: config.mobile,
                    remark: item.remark,
                    mchId: config.mchId,
                    outTradeNo: createOrderNumber(),
                    expressMoney: 0,
                    totalFee: multiply(item.totalFee, 100)
                };
                purchase(params);
            }
        }

        /**
         * 获取支付状态
         */
        getStatusStr = (status) => {
            var option = indexBy(pageConfig.ORDER_STATUS, 'id')[status];
            var result = '';
            if (option) {
                result = option.name;
            }
            return result;
        }

        /**
         * 获取收货地址列表
         */
        getOrderList = ()=> {
            list()
                .then((res)=> {
                    var data = res.data;
                    data.forEach((item)=> {
                        item.statusStr = this.getStatusStr(item.status);
                        item.products = adaptProductList(item.products);
                        item.payStr = currency(divide(item.totalFee, 100));
                    });
                    this.list = data; 
                    this.$apply();
                })
                .catch(()=> {
                    this.list = [];
                    this.$apply();
                });
        }
     }
</script>

