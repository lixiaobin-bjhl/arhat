
<template>
    <view class="page">
        <view wx:if="{{list && list.length}}">
            <block wx:for="{{list}}" wx:for-item="item" wx:for-index="index" wx:key="item._id">
                <view style="border-bottom: 1px solid #DDD">
                    <block wx:for="{{item.products}}" wx:for-item="product" wx:for-index="n" wx:key="product._id">
                        <view>{{product.product.title}}</view>
                        <view>数量：{{product.count}}</view>
                    </block>
                    <view>支付状态：{{item.statusStr}}</view>
                    <view>价格{{item.payStr}}</view>
                    <view style="color: #3399ff;" @tap="pay({{item}})" wx:if="{{item.status === 0}}">去支付</view>
                </view>
            </block>
        </view>
        <view wx:else>
            还没有订单
        </view>
    </view>
</template>

<script>

    import wepy from 'wepy'
    import { list } from '../service/order'
    import pageConfig  from './config'
    import multiply from '../function/multiply'
    import divide from '../function/divide'
    import currency from '../function/currency'
    import config from '../config';
    import indexBy from '../function/indexBy'
    import createOrderNumber from '../function/createOrderNumber'
    import purchase from '../function/purchase'

    export default class Order extends wepy.page {
        
        config = {
            navigationBarTitleText: '我的订单'
        }

        onShow () {
            this.methods.getOrderList();
        }

        data = {
            list: null 
        }

        methods = {
            /**
             * 获取支付状态
             */
            getStatusStr (status) {
                var option = indexBy(pageConfig.ORDER_STATUS, 'id')[status];
                var result = '';
                if (option) {
                    result = option.name;
                }
                return result;
            },
            /**
             * 付款 
             */
            pay (item) {
                var params = {
                    products: item.products.map((item)=> {
                        return {
                            product: item.product._id,
                            count: item.count
                        }
                    }),
                    id: item._id,
                    shippingAddress: item.shippingAddress._id,
                    discountMoney: 0,
                    title: item.products.map((item)=> {
                        return item.product.title
                    }).join(',').slice(0, 50),
                    status: 0,
                    mobile: config.mobile,
                    remark: item.remark,
                    mchId: config.mchId,
                    outTradeNo: createOrderNumber(),
                    expressMoney: 0,
                    totalFee: multiply(item.totalFee, 100)
                };
                purchase(params);
            },
            /**
             * 获取收货地址列表
             */
            getOrderList: ()=> {
                list()
                    .then((res)=> {
                        var data = res.data;
                        data.forEach((item)=> {
                            item.statusStr = this.methods.getStatusStr(item.status);
                            item.payStr = currency(divide(item.totalFee, 100));
                        });
                        this.list = data; 
                        this.$apply();
                    })
                    .catch(()=> {
                        this.list = [];
                        this.$apply();
                    });
            }
        }
     }
</script>

