<!--
     @fileOverview arhat-orderConfirm
     @author XiaoBin Li(lixiaobin8878@gmail.com) 
-->


<style lang="sass"> 
    
    @import '../scss/color';
    @import '../scss/mixin';
    @import '../scss/components/footer';

    .order-confirm {
        .address {
            background-image: url('http://otzuzbqja.bkt.clouddn.com/order-line.png');
            background-repeat: repeat-x;
            background-position: bottom center;
            background-size: 36px 2px;
            position: relative;
            padding: 10px 25px 10px 10px;
            background-color: #FFF;
            border-top: 1px solid map-get($borders, shallow);
            .icon {
                @extend .icon-bg;
                width: 14px;
                height: 14px;
                @extend .middle;
                &.icon-address {
                    margin-right: 3px;
                    background-image: url(http://otzuzbqja.bkt.clouddn.com/address.svg);
                }
                &.icon-plus {
                    width: 28px;
                    height:28px;
                    margin-right: 5px;
                    background-image: url(http://otzuzbqja.bkt.clouddn.com/plus.svg);
                }
            }
            .btn-create {
                padding: 10px;
                color: #666;
            }
            .arrow {
                background-image: url('http://otzuzbqja.bkt.clouddn.com/arrow-right.svg');
                position: absolute;
                right: 7px;
                top: 50%;
                transform: translateY(-50%);
            }
        }
        .fmenu {
            .menu-item {
                &:first-of-type {
                    border-right: 1px solid map-get($borders, shallow);
                }
            }
            .total {
                flex: 2;
                padding-right: 5px;
                text-align: right;
            }
            form {
                flex: 2;
            }
            .btn {
                @extend .plain-btn;
                line-height: 108rpx;
            }
        }
    }
</style>

<template>
    <view class="page order-confirm">
        <view wx:if="{{defaultShippingAddress}}" class="address" @tap="selectShipingAddress">
            <view class="icon arrow"></view>
            <view class="clearfix">
                <view class="pull-left"><view class="icon icon-address"></view>收货人：{{defaultShippingAddress.name}}</view>
                <view class="pull-right">{{defaultShippingAddress.contactNumber}}</view>
            </view>
            <view class="gray-light">{{defaultShippingAddress.region}}{{defaultShippingAddress.address}}</view>
        </view>
        <view @tap="selectShipingAddress" class="address" wx:else>
            <view class="icon arrow"></view>
            <view class="btn-create">
                <view class="icon icon-plus"></view>添加收货地址
            </view>
        </view>
        <block wx:if="{{products}}" wx:for="{{products}}" wx:for-item="item" wx:for-index="index" wx:key="item._id">
            <view class="product-item">
                <view class="product-image weui-media-box__hd weui-media-box__hd_in-appmsg">
                    <image class="weui-media-box__thumb" @tap.stop="redirectProductDetail({{item}})" style="background-color: #eee;" mode="aspectFill" src="{{item.imageUrl}}"></image>
                </view>
                <view class="product">  
                    <view class="title">{{item.title}}</view>
                    <view wx:for="{{item.specifications}}" class="specifications" wx:for-item="specification" wx:for-index="index" wx:key="index">
                        <view>{{specification.name}}：</view>
                        <view>{{specification.value}}</view>
                    </view>
                    <view class="info">
                        <view class="price">{{item.priceStr}}</view>
                        <view class="count">×{{item.count}}</view>
                    </view>
                </view>
            </view>
        </block>

        <view class="weui-form-preview__bd">
            <view class="weui-form-preview__item">
                <view class="weui-form-preview__label">收货方式</view>
                <view class="weui-form-preview__value">快递</view>
            </view>
            <view class="weui-form-preview__item">
                <view class="weui-form-preview__label">快递费用</view>
                <view class="weui-form-preview__value" class="money">{{expressMoney}}</view>
            </view>
            <view class="weui-form-preview__item">
                <view class="weui-form-preview__label">给商家留言</view>
                <view class="weui-form-preview__value">
                    <input placeholder="给商家留言" bindinput="bindInputMessage" value="{{message}}" maxlength="50" />
                </view>
            </view>
        </view>

        <view class="fmenu">
            <view class="menu-item" @tap="redirect('index')">  
                <view class="icon home"></view>    
                <view>首页</view>  
            </view>
            <view class="total">合计：<view class="money middle">{{totalMoney}}</view></view>
            <form bindsubmit="createOrder" report-submit="true">
                <button class="btn btn-order" formType="submit">提交订单</button>
            </form>
        </view>
        <copyright></copyright>
    </view>
</template>

<script>

    import wepy from 'wepy'
    import { listByIds } from '../service/product'
    import { removeByPids } from '../service/card'
    import { list } from '../service/shippingAddress'
    import * as order from '../service/order'
    import * as message from '../service/message'
    import multiply from '../function/multiply'
    import plus from '../function/plus'
    import currency from '../function/currency'
    import config from '../config'
    import adaptProductList from '../function/adaptProductList'
    import createOrderNumber from '../function/createOrderNumber'
    import purchase from '../function/purchase'
    import copyright from '../components/copyright'
    import toast from '../function/toast'
    
    export default class OrderConfirm  extends wepy.page {
        
        config = {
            navigationBarTitleText: '确认定单'
        }

        data = {
           products: null,
           message: '',
           expressMoney: currency(0),
           shippingAddressList: null
        }

        onShow () {
            this.getShippingAddressList();
        }

        computed = {
            // 默认收货地地址
            defaultShippingAddress: ()=> {
                var result = null;
                var shippingAddressList = this.shippingAddressList;
                if (shippingAddressList && shippingAddressList.length) {
                    // 如果只有一个收货地址，不管是不是默认的，就当默认的使用
                    if (shippingAddressList.length == 1) {
                        result = shippingAddressList[0];
                    } else {
                        shippingAddressList.some((item)=> {
                            if (item.isDefault) {
                                result = item;
                                return true;
                            }
                        });
                    }
                }
                return result;
            },
            totalMoney () {
                return currency(this.getTotalMoney());
            }
        }

        components = {
            copyright
        }

        methods = {
            /**
             * 跳转地址 
             */
            redirect (url) {
                wx.redirectTo({
                    url: url
                });
            },

            /**
             * 填写备注信息 
             */
            bindInputMessage: (e)=> {
                this.message = e.detail.value;
            },

            /**
             * 跳转到产品详情 
             */
            redirectProductDetail: function redirectProductDetail(item) {
                this.methods.redirect('productDetail?pid=' + item.product._id);
            },

            /**
             * 创建订单 
             */
            createOrder: (e)=> {
                var formId = e.detail.formId;
                var outTradeNo = createOrderNumber();

                if (!this.defaultShippingAddress) {
                    toast('请填写收货地址');
                    return;
                }
                var products = this.products;
                var params = {
                    products: products.map((item)=> {
                        return {
                            product: item._id,
                            count: item.count
                        }
                    }),
                    shippingAddress: this.defaultShippingAddress._id,
                    discountMoney: 0,
                    title: products.map((item)=> {
                        return item.title
                    })
                    .join(',')
                    .slice(0, 50),
                    status: 0,
                    mobile: config.mobile,
                    message: this.message.trim(),
                    mchId: config.mchId,
                    outTradeNo: outTradeNo,
                    expressMoney: 0,
                    totalFee: multiply(this.getTotalMoney(), 100)
                };

                params.formId = formId;

                order.add(params)
                    .then((res)=> {
                        var data = res.data;
                        params.id = data._id;
                        // 给商家发送一个创建订单消息
                        message.sendCreateOrderMessage(params);
                        // 下单后，把购物车的中商品删除掉
                        removeByPids(products.map((item)=> {
                            return item._id
                        }));
                        purchase(params);
                    });
            },

            /**
             * 选择配送地址 
             */
            selectShipingAddress () {
                wx.navigateTo({
                   url: 'shippingAddress'
                });
            }
        };

        /**
         * 获取收货地址列表
         */
        getShippingAddressList = ()=> {
            list()
                .then((res)=> {
                    this.shippingAddressList = res.data; 
                    this.$apply();
                })
                .catch(()=> {
                    this.shippingAddressList = [];
                    this.$apply();
                });
        }

        /**
         * 根据产品ids获取商品信息 
         */
        getProductsByIds = (products) => {
            wx.showLoading({title: '加载中'});
            listByIds({
                products: products
            })
                .then((res)=> {
                    wx.hideLoading();
                    this.products = adaptProductList(res.data);
                    this.$apply();
                })
                .catch(()=> {
                    this.products = [];
                    this.$apply();
                    wx.hideLoading();
                });
        }

        /**
         * 获取产品总价
         */
        getTotalMoney =  ()=> {
            var result = 0;
            var products = this.products || [];
            products.forEach((item)=> {
                result = plus(multiply(item.payPrice, item.count), result);
            });
            return result;
        }

        onLoad (p) {
            var products = p.products;
            products = JSON.parse(products);
            
            // 获取购买产品的信息 
            this.getProductsByIds(products);
        }
    }
</script>